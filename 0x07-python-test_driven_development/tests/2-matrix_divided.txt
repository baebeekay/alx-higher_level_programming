The ``2-matrix_divided`` module
================================

Using the 2-matrix_divided module
=================================

divides all the element of a matrix
__________________________________

importing the module:
	  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test for regular division:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

test for mix of ints, floats, and non-number type:
    >>> matrix = [['h', 'o', '1'], ['b', 5, 6]]
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test for division by zero:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

test for uneven matrix:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

test for negative numerators:
    >>> matrix = [[1, 2, -3], [4, 5, -6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, -1.5], [2.0, 2.5, -3.0]]

test for empty matrix:
    >>> matrix = []
    >>> matrix_divided(matrix, 1)
    []

test for no parameters given in input arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
